#!/usr/bin/env sh

maxEnumLength=1200

deref () {
	src=$1
	cmd='del(.. | .["$vocabulary"]?, .["$id"]?, .["$comment"]?, '$2')'
	opts=${*:3}
	
	cp src/${src}.json ${src}/index.json
	id=$(jq -r '.["$id"]' ${src}/index.json)
	
	cd src
	ajv deref ../${src}/index.json ${opts} -o ../${src}/index.json
	cd ..
	
	jq "${cmd}" ${src}/index.json > ${src}/index.tmp.json
	mv ${src}/index.tmp.json ${src}/index.json
	jq --arg id ${id} '{"$id":$id} + .' ${src}/index.json > ${src}/index.tmp.json
	mv ${src}/index.tmp.json ${src}/index.json
}

validate () {
	src=$1
	opts=${*:2}
	
	ajv validate ${src}/index.json --valid ${opts} \
		-r src/definitions.json
}

transpile () {
	src=$1
	cmd='del(.. | .["$vocabulary"]?, .["$comment"]?, .title?, .description?, .__generated?'$2')'
	opts=${*:3}
	
	jq "${cmd}" ${src}/index.json > ${src}/index.js
	# -r node_modules/wqx/json-schema/definitions.json
	ajv transpile ${src}/index.js ${opts} \
		-r src/definitions.json  \
		-o ${src}/index.js
}

locale () {
  LOCALE=${1}
  LANGUAGE=${LOCALE%-CA}
  
  ajv ftl src/locales/${1}.ftl \
	--locale ${LOCALE} --locale ${LANGUAGE} \
	-o locales/${LOCALE}.js
	
}

# primary - strict
deref primary '.errorMessage?'
## Add version
version=$(jq -r '.version' package.json)
jq --arg version ${version} '{"$comment":$version} + .' primary/index.json > primary/index.tmp.json
mv primary/index.tmp.json primary/index.json
validate primary

# extract - strict, w/ coerce
deref extract '.title?, .description?'
validate extract
transpile extract '' --loop-enum ${maxEnumLength} --coerce-types --use-defaults empty --all-errors

# frontend
deref frontend '.title?, .description?'
validate frontend
transpile frontend '' --loop-enum ${maxEnumLength} --coerce-types --use-defaults empty --all-errors

# backend
deref backend '.title?, .description?, .errorMessage?'
validate backend
transpile backend ', .errorMessage?' --loop-enum ${maxEnumLength} --coerce-types --use-defaults empty --all-errors

# quality-control
deref quality-control '.__?'
validate quality-control
transpile quality-control '' --loop-enum ${maxEnumLength}  --use-defaults empty --all-errors

# locales
locale en-CA
locale fr-CA

