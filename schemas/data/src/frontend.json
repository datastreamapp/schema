{
  "$id": "https://datastream.org/schema/data/frontend",
  "$schema": "https://json-schema.org/draft/2020-12/schema#",
  "$vocabulary": {
    "https://ajv.js.org/packages/ajv-formats.html#date": true,
    "https://ajv.js.org/options.html#coercetypes": true,
    "https://ajv.js.org/packages/ajv-keywords.html#transform": true,
    "https://ajv.js.org/packages/ajv-errors.html": true
  },
  "title": "DataStream Schema",
  "description": "Water Quality Data Schema based on WQX",
  "type": "object",
  "allOf": [
    {
      "additionalProperties": false,
      "properties": {
        "DatasetName": {
          "$ref": "./definitions.json#/columns/DatasetName"
        },
        "MonitoringLocationID": {
          "$ref": "./definitions.json#/columns/MonitoringLocationID"
        },
        "MonitoringLocationName": {
          "$ref": "./definitions.json#/columns/MonitoringLocationName"
        },
        "MonitoringLocationLatitude": {
          "$ref": "./definitions.json#/columns/MonitoringLocationLatitude"
        },
        "MonitoringLocationLongitude": {
          "$ref": "./definitions.json#/columns/MonitoringLocationLongitude"
        },
        "MonitoringLocationHorizontalCoordinateReferenceSystem": {
          "$ref": "./definitions.json#/columns/MonitoringLocationHorizontalCoordinateReferenceSystem",
          "transform": ["trim", "toEnumCase"]
        },
        "MonitoringLocationHorizontalAccuracyMeasure": {
          "$ref": "./definitions.json#/columns/MonitoringLocationHorizontalAccuracyMeasure"
        },
        "MonitoringLocationHorizontalAccuracyUnit": {
          "$ref": "./definitions.json#/columns/MonitoringLocationHorizontalAccuracyUnit",
          "transform": ["trim", "toEnumCase"]
        },
        "MonitoringLocationVerticalMeasure": {
          "$ref": "./definitions.json#/columns/MonitoringLocationVerticalMeasure"
        },
        "MonitoringLocationVerticalUnit": {
          "$ref": "./definitions.json#/columns/MonitoringLocationVerticalUnit",
          "transform": ["trim", "toEnumCase"]
        },
        "MonitoringLocationType": {
          "$ref": "./definitions.json#/columns/MonitoringLocationType",
          "transform": ["trim", "toEnumCase"]
        },
        "ActivityType": {
          "$ref": "./definitions.json#/columns/ActivityType",
          "transform": ["trim", "toEnumCase"]
        },
        "ActivityMediaName": {
          "$ref": "./definitions.json#/columns/ActivityMediaName",
          "transform": ["trim", "toEnumCase"]
        },
        "ActivityStartDate": {
          "$ref": "./definitions.json#/columns/ActivityStartDate"
        },
        "ActivityStartTime": {
          "$ref": "./definitions.json#/definitions/time-loose"
        },
        "ActivityEndDate": {
          "$ref": "./definitions.json#/columns/ActivityEndDate"
        },
        "ActivityEndTime": {
          "$ref": "./definitions.json#/definitions/time-loose"
        },
        "ActivityDepthHeightMeasure": {
          "$ref": "./definitions.json#/columns/ActivityDepthHeightMeasure"
        },
        "ActivityDepthHeightUnit": {
          "$ref": "./values/ActivityDepthHeightUnit.primary.json",
          "transform": ["trim", "toEnumCase"]
        },
        "SampleCollectionEquipmentName": {
          "$ref": "./definitions.json#/columns/SampleCollectionEquipmentName",
          "transform": ["trim", "toEnumCase"]
        },
        "CharacteristicName": {
          "$ref": "./definitions.json#/columns/CharacteristicName",
          "transform": ["trim", "toEnumCase"]
        },
        "MethodSpeciation": {
          "$ref": "./definitions.json#/columns/MethodSpeciation",
          "transform": ["trim", "toEnumCase"]
        },
        "ResultSampleFraction": {
          "$ref": "./definitions.json#/columns/ResultSampleFraction",
          "transform": ["trim", "toEnumCase"]
        },
        "ResultValue": {
          "$ref": "./definitions.json#/columns/ResultValue"
        },
        "ResultUnit": {
          "$ref": "./definitions.json#/columns/ResultUnit",
          "transform": ["trim", "toEnumCase"]
        },
        "ResultValueType": {
          "$ref": "./definitions.json#/columns/ResultValueType",
          "transform": ["trim", "toEnumCase"]
        },
        "ResultDetectionCondition": {
          "$ref": "./definitions.json#/columns/ResultDetectionCondition",
          "transform": ["trim", "toEnumCase"]
        },
        "ResultDetectionQuantitationLimitMeasure": {
          "$ref": "./definitions.json#/columns/ResultDetectionQuantitationLimitMeasure"
        },
        "ResultDetectionQuantitationLimitUnit": {
          "$ref": "./definitions.json#/columns/ResultDetectionQuantitationLimitUnit",
          "transform": ["trim", "toEnumCase"]
        },
        "ResultDetectionQuantitationLimitType": {
          "$ref": "./definitions.json#/columns/ResultDetectionQuantitationLimitType",
          "transform": ["trim", "toEnumCase"]
        },
        "ResultStatusID": {
          "$ref": "./definitions.json#/columns/ResultStatusID",
          "transform": ["trim", "toEnumCase"]
        },
        "ResultComment": {
          "$ref": "./definitions.json#/columns/ResultComment"
        },
        "ResultAnalyticalMethodID": {
          "$ref": "./definitions.json#/columns/ResultAnalyticalMethodID"
        },
        "ResultAnalyticalMethodContext": {
          "$ref": "./definitions.json#/columns/ResultAnalyticalMethodContext",
          "transform": ["trim", "toEnumCase"]
        },
        "ResultAnalyticalMethodName": {
          "$ref": "./definitions.json#/columns/ResultAnalyticalMethodName"
        },
        "AnalysisStartDate": {
          "$ref": "./definitions.json#/columns/AnalysisStartDate"
        },
        "AnalysisStartTime": {
          "$ref": "./definitions.json#/definitions/time-loose"
        },
        "AnalysisStartTimeZone": {
          "$ref": "./definitions.json#/definitions/timezone-loose"
        },
        "LaboratoryName": {
          "$ref": "./definitions.json#/columns/LaboratoryName"
        },
        "LaboratorySampleID": {
          "$ref": "./definitions.json#/columns/LaboratorySampleID"
        }
      },
      "required": [
        "DatasetName",
        "MonitoringLocationID",
        "MonitoringLocationName",
        "MonitoringLocationType",
        "MonitoringLocationLatitude",
        "MonitoringLocationLongitude",
        "MonitoringLocationHorizontalCoordinateReferenceSystem",
        "ActivityType",
        "ActivityMediaName",
        "ActivityStartDate",
        "CharacteristicName",
        "ResultValueType"
      ],
      "dependencies": {
        "MonitoringLocationHorizontalAccuracyMeasure": [
          "MonitoringLocationHorizontalAccuracyUnit"
        ],
        "MonitoringLocationVerticalMeasure": ["MonitoringLocationVerticalUnit"],
        "ActivityDepthHeightMeasure": ["ActivityDepthHeightUnit"],
        "ResultValue": ["ResultUnit"],
        "ResultDetectionQuantitationLimitMeasure": [
          "ResultDetectionQuantitationLimitUnit",
          "ResultDetectionQuantitationLimitType"
        ],
        "AnalysisStartTime": ["AnalysisStartTimeZone"]
      },
      "errorMessage": {
        "additionalProperties": "Should not have columns outside of schema/template"
      }
    },
    {
      "$ref": "./logic/CharacteristicName-MethodSpeciation.json"
    },
    {
      "$ref": "./logic/CharacteristicName-StableIsotope-MethodSpeciation.json"
    },
    {
      "$ref": "./logic/CharacteristicName-ResultSampleFraction.json"
    },
    {
      "$ref": "./logic/CharacteristicName-Nutrient-ResultSampleFraction.json"
    },
    {
      "$ref": "./logic/ResultDetectionCondition-ResultValue.json"
    },
    {
      "$ref": "./logic/ResultDetectionCondition-ResultDetectionQuantitationLimit-above-below.json"
    },
    {
      "$ref": "./logic/ResultDetectionCondition-ResultDetectionQuantitationLimit-not-detect.json"
    },
    {
      "$ref": "./logic/ActivityType-ResultAnalyticalMethod.json"
    },
    {
      "$ref": "./logic/ResultUnit-Salinity.json"
    },
    {
      "$ref": "./logic/ResultDetectionQuantitationLimitUnit-Salinity.json"
    },
    {
      "$ref": "./logic/CSVInjection.json"
    }
  ]
}
